// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/machine-config-operator/pkg/apis/machineconfiguration.openshift.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RenderedMachineConfigLister helps list RenderedMachineConfigs.
type RenderedMachineConfigLister interface {
	// List lists all RenderedMachineConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1.RenderedMachineConfig, err error)
	// Get retrieves the RenderedMachineConfig from the index for a given name.
	Get(name string) (*v1.RenderedMachineConfig, error)
	RenderedMachineConfigListerExpansion
}

// renderedMachineConfigLister implements the RenderedMachineConfigLister interface.
type renderedMachineConfigLister struct {
	indexer cache.Indexer
}

// NewRenderedMachineConfigLister returns a new RenderedMachineConfigLister.
func NewRenderedMachineConfigLister(indexer cache.Indexer) RenderedMachineConfigLister {
	return &renderedMachineConfigLister{indexer: indexer}
}

// List lists all RenderedMachineConfigs in the indexer.
func (s *renderedMachineConfigLister) List(selector labels.Selector) (ret []*v1.RenderedMachineConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RenderedMachineConfig))
	})
	return ret, err
}

// Get retrieves the RenderedMachineConfig from the index for a given name.
func (s *renderedMachineConfigLister) Get(name string) (*v1.RenderedMachineConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("renderedmachineconfig"), name)
	}
	return obj.(*v1.RenderedMachineConfig), nil
}
